<?php
/**
 * Generated by Haxe 4.3.6
 */

namespace tink\querystring\_Parser;

use \php\Boot;
use \tink\querystring\Field;
use \haxe\ds\StringMap;

final class Tree_Impl_ {
	/**
	 * @return StringMap
	 */
	public static function _new () {
		#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:95: character 3
		return new StringMap();
	}

	/**
	 * @param StringMap $this
	 * @param string $key
	 * 
	 * @return Field
	 */
	public static function get ($this1, $key) {
		#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:100: characters 5-21
		return ($this1->data[$key] ?? null);
	}

	/**
	 * @param StringMap $this
	 * @param string $key
	 * @param Field $value
	 * 
	 * @return Field
	 */
	public static function set ($this1, $key, $value) {
		#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:104: characters 12-29
		$this1->data[$key] = $value;
		#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:104: characters 24-29
		return $value;
	}

	/**
	 * @param StringMap $this
	 * @param string $indent
	 * 
	 * @return string
	 */
	public static function str ($this1, $indent) {
		#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:110: characters 5-33
		$buf = new \StringBuf();
		#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:111: characters 5-19
		$buf->add("{\x0A");
		#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:112: characters 25-29
		$map = $this1;
		$_g_map = $map;
		$_g_keys = $map->keys();
		#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:112: lines 112-118
		while ($_g_keys->hasNext()) {
			#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:112: characters 25-29
			$key = $_g_keys->next();
			$_g_value = $_g_map->get($key);
			$_g_key = $key;
			$key1 = $_g_key;
			$value = $_g_value;
			#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:113: lines 113-118
			$__hx__switch = ($value->index);
			if ($__hx__switch === 0) {
				#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:116: characters 18-21
				$sub = $value->params[0];
				#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:117: characters 11-67
				$buf->add(($indent??'null') . ("  " . ($key1??'null') . ": " . (Tree_Impl_::str($sub, ($indent??'null') . "  ")??'null') . ",\x0A"));
			} else if ($__hx__switch === 1) {
				#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:114: characters 20-21
				$v = $value->params[0];
				#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:115: characters 11-46
				$buf->add(($indent??'null') . ("  " . ($key1??'null') . ": \"" . \Std::string($v) . "\",\x0A"));
			}
		}
		#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:119: characters 5-26
		$buf->add(($indent??'null') . "}");
		#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:120: characters 5-26
		return $buf->b;
	}

	/**
	 * @param StringMap $this
	 * 
	 * @return string
	 */
	public static function toString ($this1) {
		#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:107: characters 5-19
		return Tree_Impl_::str($this1, "");
	}
}

Boot::registerClass(Tree_Impl_::class, 'tink.querystring._Parser.Tree_Impl_');
