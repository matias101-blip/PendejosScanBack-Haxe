<?php
/**
 * Generated by Haxe 4.3.6
 */

namespace tink\querystring;

use \php\Boot;
use \haxe\Exception;
use \tink\querystring\_Parser\Tree_Impl_;
use \haxe\ds\StringMap;

class FieldTools {
	/**
	 * @param Field $field
	 * @param bool $substitute
	 * 
	 * @return StringMap
	 */
	public static function getSub ($field, $substitute = true) {
		#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:70: lines 70-75
		if ($substitute === null) {
			$substitute = true;
		}
		if ($substitute && ($field === null)) {
			#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:71: characters 9-19
			return new StringMap();
		} else {
			#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:72: lines 72-75
			$__hx__switch = ($field->index);
			if ($__hx__switch === 0) {
				#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:73: characters 18-19
				$v = $field->params[0];
				#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:73: characters 22-23
				return $v;
			} else if ($__hx__switch === 1) {
				#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:74: characters 20-21
				$_g = $field->params[0];
				#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:74: characters 24-29
				throw Exception::thrown("unexpected primitive");
			}
		}
	}

	/**
	 * @param Field $field
	 * 
	 * @return mixed
	 */
	public static function getValue ($field) {
		#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:79: lines 79-82
		$__hx__switch = ($field->index);
		if ($__hx__switch === 0) {
			#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:80: characters 16-17
			$_g = $field->params[0];
			#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:80: characters 21-26
			throw Exception::thrown("unexpected object/array");
		} else if ($__hx__switch === 1) {
			#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:81: characters 18-19
			$v = $field->params[0];
			#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:81: characters 22-23
			return $v;
		}
	}

	/**
	 * @param Field $f
	 * 
	 * @return string
	 */
	public static function toString ($f) {
		#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:86: lines 86-89
		$__hx__switch = ($f->index);
		if ($__hx__switch === 0) {
			#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:88: characters 16-20
			$tree = $f->params[0];
			#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:88: characters 23-38
			return Tree_Impl_::toString($tree);
		} else if ($__hx__switch === 1) {
			#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:87: characters 18-19
			$v = $f->params[0];
			#/home/thehunter101/.haxe/tink_querystring/0,7,0/src/tink/querystring/Parser.hx:87: characters 22-35
			return \Std::string($v);
		}
	}
}

Boot::registerClass(FieldTools::class, 'tink.querystring.FieldTools');
