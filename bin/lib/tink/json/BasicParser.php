<?php
/**
 * Generated by Haxe 4.3.6
 */

namespace tink\json;

use \php\_Boot\HxAnon;
use \haxe\io\_BytesData\Container;
use \tink\core\NamedWith;
use \php\Boot;
use \tink\core\Annex;
use \tink\core\TypedError;
use \tink\json\_Parser\RawData_Impl_;
use \tink\json\_Parser\JsonString_Impl_;
use \haxe\format\JsonParser;
use \haxe\io\Bytes;
use \tink\json\_Parser\SliceData;

class BasicParser {
	/**
	 * @var int
	 */
	static public $DBQT;

	/**
	 * @var \Closure[]|\Array_hx
	 */
	public $afterParsing;
	/**
	 * @var int
	 */
	public $max;
	/**
	 * @var Annex
	 */
	public $plugins;
	/**
	 * @var int
	 */
	public $pos;
	/**
	 * @var Container
	 */
	public $source;

	/**
	 * @param int $char
	 * 
	 * @return bool
	 */
	public static function isDigit ($char) {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:309: characters 12-34
		if ($char < 58) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:309: characters 25-34
			return $char > 47;
		} else {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:309: characters 12-34
			return false;
		}
	}

	/**
	 * @param int $char
	 * 
	 * @return bool
	 */
	public static function startsNumber ($char) {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:312: characters 12-65
		if (!(($char === 46) || ($char === 45))) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:312: characters 52-65
			if ($char < 58) {
				return $char > 47;
			} else {
				return false;
			}
		} else {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:312: characters 12-65
			return true;
		}
	}

	/**
	 * @return void
	 */
	public function __construct () {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:228: characters 22-45
		$this->afterParsing = new \Array_hx();
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:231: characters 5-35
		$this->plugins = new Annex($this);
	}

	/**
	 * @param mixed $target
	 * @param mixed $source
	 * 
	 * @return mixed
	 */
	public function copyFields ($target, $source) {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:256: lines 256-257
		$_g = 0;
		$_g1 = \Reflect::fields($source);
		while ($_g < $_g1->length) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:256: characters 12-13
			$f = ($_g1->arr[$_g] ?? null);
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:256: lines 256-257
			++$_g;
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:257: characters 9-62
			\Reflect::setField($target, $f, \Reflect::field($source, $f));
		}
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:259: characters 5-18
		return $target;
	}

	/**
	 * @param string $s
	 * @param int $pos
	 * @param int $end
	 * 
	 * @return mixed
	 */
	public function die ($s, $pos = -1, $end = -1) {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:491: lines 491-518
		if ($pos === null) {
			$pos = -1;
		}
		if ($end === null) {
			$end = -1;
		}
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:492: lines 492-495
		if ($pos === -1) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:493: characters 13-27
			$pos = $this->pos;
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:493: characters 7-27
			$end = $pos;
		} else if ($end === -1) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:495: characters 7-21
			$end = $this->pos;
		}
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:497: lines 497-498
		if ($end <= $pos) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:498: characters 7-20
			$end = $pos + 1;
		}
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:500: lines 500-502
		$range = ($end > ($pos + 1) ? "characters " . ($pos??'null') . " - " . ($end??'null') : "character " . ($pos??'null'));
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:504: lines 504-512
		$clip = function ($s, $maxLength, $left) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:506: lines 506-512
			if (mb_strlen($s) > $maxLength) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:507: lines 507-510
				if ($left) {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:508: characters 13-52
					return "... " . (\mb_substr($s, mb_strlen($s) - $maxLength, null)??'null');
				} else {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:510: characters 13-44
					return (\mb_substr($s, 0, $maxLength)??'null') . " ...";
				}
			} else {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:512: characters 11-12
				return $s;
			}
		};
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:514: characters 5-35
		$center = ($pos + $end) >> 1;
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:515: characters 5-231
		$context = ($clip(RawData_Impl_::substring($this->source, 0, $pos), 20, true)??'null') . "  ---->  " . ($clip(RawData_Impl_::substring($this->source, $pos, $center), 20, false)??'null') . ($clip(RawData_Impl_::substring($this->source, $center, $end), 20, true)??'null') . "  <----  " . ($clip(RawData_Impl_::substring($this->source, $end, $this->max), 20, false)??'null');
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:517: characters 5-129
		return TypedError::withData(422, ($s??'null') . (" at " . ($range??'null') . " in " . ($context??'null')), new HxAnon([
			"source" => $this->source,
			"start" => $pos,
			"end" => $end,
		]), new HxAnon([
			"fileName" => "tink/json/Parser.hx",
			"lineNumber" => 517,
			"className" => "tink.json.BasicParser",
			"methodName" => "die",
		]))->throwSelf();
	}

	/**
	 * @return SliceData
	 */
	public function doParseNumber () {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:322: characters 5-57
		return $this->slice($this->skipNumber(\ord($this->source->s[$this->pos++])), $this->pos);
	}

	/**
	 * @param Class $cls
	 * 
	 * @return mixed
	 */
	public function emptyInstance ($cls) {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:263: lines 263-267
		return \Type::createEmptyInstance($cls);
	}

	/**
	 * @param string $source
	 * 
	 * @return void
	 */
	public function init ($source) {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:234: characters 5-17
		$this->pos = 0;
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:235: characters 19-65
		$b = \strlen($source);
		$b1 = new Bytes($b, new Container($source));
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:235: characters 52-64
		$this->max = $b1->length;
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:235: characters 5-65
		$this->source = $b1->b;
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:236: characters 5-18
		while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
			$this->pos++;
		}
	}

	/**
	 * @param int $c
	 * 
	 * @return Value
	 */
	public function invalidChar ($c) {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:489: characters 5-52
		return $this->die("invalid char " . (\StringTools::hex($c, 2)??'null'), $this->pos - 1);
	}

	/**
	 * @param int $start
	 * 
	 * @return mixed
	 */
	public function invalidNumber ($start) {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:325: characters 5-72
		return $this->die("Invalid number " . (RawData_Impl_::substring($this->source, $start, $this->pos)??'null'), $start);
	}

	/**
	 * @return int
	 */
	public function next () {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:371: characters 12-33
		return \ord($this->source->s[$this->pos++]);
	}

	/**
	 * @return bool
	 */
	public function parseBool () {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:21: characters 9-29
		while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
			$this->pos++;
		}
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
		$tmp = null;
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
		if (($this->max > ($this->pos + 3)) && (\ord($this->source->s[$this->pos]) === 116) && (\ord($this->source->s[$this->pos + 1]) === 114) && (\ord($this->source->s[$this->pos + 2]) === 117) && (\ord($this->source->s[$this->pos + 3]) === 101)) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
			$this->pos += 4;
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:25: characters 11-31
			while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
				$this->pos++;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
			$tmp = true;
		} else {
			$tmp = false;
		}
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:540: lines 540-542
		if ($tmp) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:540: characters 31-35
			return true;
		} else {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:21: characters 9-29
			while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
				$this->pos++;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
			$tmp = null;
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
			if (($this->max > ($this->pos + 4)) && (\ord($this->source->s[$this->pos]) === 102) && (\ord($this->source->s[$this->pos + 1]) === 97) && (\ord($this->source->s[$this->pos + 2]) === 108) && (\ord($this->source->s[$this->pos + 3]) === 115) && (\ord($this->source->s[$this->pos + 4]) === 101)) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
				$this->pos += 5;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:25: characters 11-31
				while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
					$this->pos++;
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
				$tmp = true;
			} else {
				$tmp = false;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:541: lines 541-542
			if ($tmp) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:541: characters 37-42
				return false;
			} else {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:542: characters 12-41
				return $this->die("expected boolean value");
			}
		}
	}

	/**
	 * @return mixed
	 */
	public function parseDynamic () {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:245: characters 5-21
		$start = $this->pos;
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:246: characters 5-16
		$this->skipValue();
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:247: characters 12-62
		return (new JsonParser(RawData_Impl_::substring($this->source, $start, $this->pos)))->doParse();
	}

	/**
	 * @return SliceData
	 */
	public function parseNumber () {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:316: characters 11-44
		$char = \ord($this->source->s[$this->pos]);
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:316: lines 316-319
		if (($char === 46) || ($char === 45) || (($char < 58) && ($char > 47))) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:317: characters 9-24
			return $this->doParseNumber();
		} else {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:319: characters 9-31
			return $this->die("number expected");
		}
	}

	/**
	 * @return SliceData
	 */
	public function parseRestOfString () {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:275: characters 5-40
		return $this->slice($this->skipString(), $this->pos - 1);
	}

	/**
	 * @return string
	 */
	public function parseSerialized () {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:381: characters 5-21
		$start = $this->pos;
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:382: characters 5-16
		$this->skipValue();
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:383: characters 5-45
		return RawData_Impl_::substring($this->source, $start, $this->pos);
	}

	/**
	 * @return SliceData
	 */
	public function parseString () {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:21: characters 9-29
		while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
			$this->pos++;
		}
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
		$e = null;
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
		if (($this->max > $this->pos) && (\ord($this->source->s[$this->pos]) === 34)) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
			$this->pos += 1;
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
			$e = true;
		} else {
			$e = false;
		}
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:272: characters 12-68
		$e1 = (!$e ? $this->die("Expected " . "string") : null);
		return $this->parseRestOfString();
	}

	/**
	 * @return Value
	 */
	public function parseValue () {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:387: lines 387-437
		$_gthis = $this;
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:387: characters 19-25
		$_g = \ord($this->source->s[$this->pos++]);
		if ($_g === 34) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:424: characters 9-48
			return Value::VString(JsonString_Impl_::toString($this->parseRestOfString()));
		} else if ($_g === 91) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:412: characters 9-38
			$ret = new \Array_hx();
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:21: characters 9-29
			while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
				$this->pos++;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
			$tmp = null;
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
			if (($this->max > $this->pos) && (\ord($this->source->s[$this->pos]) === 93)) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
				$this->pos += 1;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:25: characters 11-31
				while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
					$this->pos++;
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
				$tmp = true;
			} else {
				$tmp = false;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:414: lines 414-419
			if (!$tmp) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:415: lines 415-417
				while (true) {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:416: characters 13-35
					$x = $this->parseValue();
					$ret->arr[$ret->length++] = $x;
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:21: characters 9-29
					while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
						$this->pos++;
					}
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
					$tmp = null;
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
					if (($this->max > $this->pos) && (\ord($this->source->s[$this->pos]) === 44)) {
						#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
						$this->pos += 1;
						#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:25: characters 11-31
						while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
							$this->pos++;
						}
						#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
						$tmp = true;
					} else {
						$tmp = false;
					}
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:415: lines 415-417
					if (!$tmp) {
						break;
					}
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:21: characters 9-29
				while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
					$this->pos++;
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
				$tmp = null;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
				if (($this->max > $this->pos) && (\ord($this->source->s[$this->pos]) === 93)) {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
					$this->pos += 1;
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
					$tmp = true;
				} else {
					$tmp = false;
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:6: characters 18-160
				if (!$tmp) {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:6: characters 76-114
					$this->die("Expected " . "]");
				}
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:421: characters 9-20
			return Value::VArray($ret);
		} else if ($_g === 102) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
			$e = null;
			if (($this->max > ($this->pos + 3)) && (\ord($this->source->s[$this->pos]) === 97) && (\ord($this->source->s[$this->pos + 1]) === 108) && (\ord($this->source->s[$this->pos + 2]) === 115) && (\ord($this->source->s[$this->pos + 3]) === 101)) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
				$this->pos += 4;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
				$e = true;
			} else {
				$e = false;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:428: characters 9-52
			$e1 = (!$e ? $this->die("Expected " . "alse") : null);
			return Value::VBool(false);
		} else if ($_g === 110) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
			$e = null;
			if (($this->max > ($this->pos + 2)) && (\ord($this->source->s[$this->pos]) === 117) && (\ord($this->source->s[$this->pos + 1]) === 108) && (\ord($this->source->s[$this->pos + 2]) === 108)) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
				$this->pos += 3;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
				$e = true;
			} else {
				$e = false;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:430: characters 39-44
			$e1 = (!$e ? $this->die("Expected " . "ull") : null);
			return Value::VNull();
		} else if ($_g === 116) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
			$e = null;
			if (($this->max > ($this->pos + 2)) && (\ord($this->source->s[$this->pos]) === 114) && (\ord($this->source->s[$this->pos + 1]) === 117) && (\ord($this->source->s[$this->pos + 2]) === 101)) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
				$this->pos += 3;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
				$e = true;
			} else {
				$e = false;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:426: characters 9-50
			$e1 = (!$e ? $this->die("Expected " . "rue") : null);
			return Value::VBool(true);
		} else if ($_g === 123) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:389: characters 9-48
			$fields = new \Array_hx();
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:21: characters 9-29
			while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
				$this->pos++;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
			$tmp = null;
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
			if (($this->max > $this->pos) && (\ord($this->source->s[$this->pos]) === 125)) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
				$this->pos += 1;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:25: characters 11-31
				while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
					$this->pos++;
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
				$tmp = true;
			} else {
				$tmp = false;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:390: lines 390-406
			if (!$tmp) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:401: lines 401-403
				while (true) {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:402: characters 13-19
					if (\ord($_gthis->source->s[$_gthis->pos++]) !== 34) {
						$_gthis->die("expected string", $_gthis->pos - 1);
					}
					$x = JsonString_Impl_::toString($_gthis->parseRestOfString());
					while (($_gthis->pos < $_gthis->max) && (\ord($_gthis->source->s[$_gthis->pos]) < 33)) {
						$_gthis->pos++;
					}
					$e = null;
					if (($_gthis->max > $_gthis->pos) && (\ord($_gthis->source->s[$_gthis->pos]) === 58)) {
						$_gthis->pos += 1;
						while (($_gthis->pos < $_gthis->max) && (\ord($_gthis->source->s[$_gthis->pos]) < 33)) {
							$_gthis->pos++;
						}
						$e = true;
					} else {
						$e = false;
					}
					$e1 = (!$e ? $_gthis->die("Expected " . ":") : null);
					$x1 = new NamedWith($x, $_gthis->parseValue());
					$fields->arr[$fields->length++] = $x1;
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:21: characters 9-29
					while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
						$this->pos++;
					}
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
					$tmp = null;
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
					if (($this->max > $this->pos) && (\ord($this->source->s[$this->pos]) === 44)) {
						#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
						$this->pos += 1;
						#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:25: characters 11-31
						while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
							$this->pos++;
						}
						#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
						$tmp = true;
					} else {
						$tmp = false;
					}
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:401: lines 401-403
					if (!$tmp) {
						break;
					}
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:21: characters 9-29
				while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
					$this->pos++;
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
				$tmp = null;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
				if (($this->max > $this->pos) && (\ord($this->source->s[$this->pos]) === 125)) {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
					$this->pos += 1;
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
					$tmp = true;
				} else {
					$tmp = false;
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:6: characters 18-160
				if (!$tmp) {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:6: characters 76-114
					$this->die("Expected " . "}");
				}
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:408: characters 9-24
			return Value::VObject($fields);
		} else {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:431: characters 12-16
			$char = $_g;
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:432: lines 432-436
			if (($char === 46) || ($char === 45) || (($char < 58) && ($char > 47))) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:433: characters 11-16
				$this->pos--;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:434: characters 19-44
				$this1 = $this->doParseNumber();
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:434: characters 11-45
				return Value::VNumber(\Std::parseFloat(RawData_Impl_::substring($this1->source, $this1->min, $this1->max)));
			} else {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:436: characters 14-31
				return $this->invalidChar($char);
			}
		}
	}

	/**
	 * @return void
	 */
	public function skipArray () {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:21: characters 9-29
		while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
			$this->pos++;
		}
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
		$tmp = null;
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
		if (($this->max > $this->pos) && (\ord($this->source->s[$this->pos]) === 93)) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
			$this->pos += 1;
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:25: characters 11-31
			while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
				$this->pos++;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
			$tmp = true;
		} else {
			$tmp = false;
		}
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:440: lines 440-441
		if ($tmp) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:441: characters 7-13
			return;
		}
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:443: lines 443-445
		while (true) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:444: characters 7-18
			$this->skipValue();
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:21: characters 9-29
			while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
				$this->pos++;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
			$tmp = null;
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
			if (($this->max > $this->pos) && (\ord($this->source->s[$this->pos]) === 44)) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
				$this->pos += 1;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:25: characters 11-31
				while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
					$this->pos++;
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
				$tmp = true;
			} else {
				$tmp = false;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:443: lines 443-445
			if (!$tmp) {
				break;
			}
		}
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:21: characters 9-29
		while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
			$this->pos++;
		}
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
		$tmp = null;
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
		if (($this->max > $this->pos) && (\ord($this->source->s[$this->pos]) === 93)) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
			$this->pos += 1;
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
			$tmp = true;
		} else {
			$tmp = false;
		}
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:6: characters 18-160
		if (!$tmp) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:6: characters 76-114
			$this->die("Expected " . "]");
		}
	}

	/**
	 * @return void
	 */
	public function skipIgnored () {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:242: characters 5-69
		while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:242: characters 64-69
			$this->pos++;
		}
	}

	/**
	 * @param int $c
	 * 
	 * @return int
	 */
	public function skipNumber ($c) {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:329: characters 5-25
		$start = $this->pos - 1;
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:330: characters 5-69
		$minus = $c === 45;
		$digit = !$minus;
		$zero = $c === 48;
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:331: characters 5-59
		$point = false;
		$e = false;
		$pm = false;
		$end = false;
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:332: lines 332-360
		while ($this->pos < $this->max) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:333: characters 11-17
			$c = \ord($this->source->s[$this->pos++]);
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:334: lines 334-358
			if ($c === 43 || $c === 45) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:352: characters 11-45
				if (!$e || $pm) {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:352: characters 25-45
					$this->invalidNumber($start);
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:353: characters 11-24
				$digit = false;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:353: characters 26-35
				$pm = true;
			} else if ($c === 46) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:346: characters 11-51
				if ($minus || $point) {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:346: characters 31-51
					$this->invalidNumber($start);
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:347: characters 11-24
				$digit = false;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:347: characters 26-38
				$point = true;
			} else if ($c === 48) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:336: characters 11-51
				if ($zero && !$point) {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:336: characters 31-51
					$this->invalidNumber($start);
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:337: lines 337-339
				if ($minus) {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:338: characters 13-26
					$minus = false;
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:338: characters 28-39
					$zero = true;
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:340: characters 11-23
				$digit = true;
			} else if ($c === 49 || $c === 50 || $c === 51 || $c === 52 || $c === 53 || $c === 54 || $c === 55 || $c === 56 || $c === 57) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:342: characters 11-51
				if ($zero && !$point) {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:342: characters 31-51
					$this->invalidNumber($start);
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:343: characters 11-35
				if ($minus) {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:343: characters 22-35
					$minus = false;
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:344: characters 11-23
				$digit = true;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:344: characters 25-37
				$zero = false;
			} else if ($c === 69 || $c === 101) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:349: characters 11-55
				if ($minus || $zero || $e) {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:349: characters 35-55
					$this->invalidNumber($start);
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:350: characters 11-24
				$digit = false;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:350: characters 26-34
				$e = true;
			} else {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:355: characters 11-43
				if (!$digit) {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:355: characters 23-43
					$this->invalidNumber($start);
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:356: characters 11-16
				$this->pos--;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:357: characters 11-21
				$end = true;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:359: characters 7-21
			if ($end) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:359: characters 16-21
				break;
			}
		}
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:361: characters 5-17
		return $start;
	}

	/**
	 * @return int
	 */
	public function skipString () {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:278: characters 5-21
		$start = $this->pos;
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:280: lines 280-302
		while (true) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:288: characters 14-44
			$_g = RawData_Impl_::charPos($this->source, BasicParser::$DBQT, $this->pos, $this->max);
			if ($_g === -1) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:291: characters 11-44
				$this->die("unterminated string", $start);
			} else {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:293: characters 14-15
				$v = $_g;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:295: characters 11-22
				$this->pos = $v + 1;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:297: characters 11-27
				$p = $this->pos - 2;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:299: characters 11-53
				while (\ord($this->source->s[$p]) === 92) {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:299: characters 50-53
					--$p;
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:300: lines 300-301
				if ((($p - $this->pos) & 1) === 0) {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:301: characters 13-18
					break;
				}
			}
		}
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:305: characters 5-17
		return $start;
	}

	/**
	 * @return void
	 */
	public function skipValue () {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:451: lines 451-486
		$_gthis = $this;
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:451: characters 12-18
		$_g = \ord($this->source->s[$this->pos++]);
		if ($_g === 34) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:474: characters 9-21
			$this->skipString();
		} else if ($_g === 91) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:472: characters 9-20
			$this->skipArray();
		} else if ($_g === 102) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
			$tmp = null;
			if (($this->max > ($this->pos + 3)) && (\ord($this->source->s[$this->pos]) === 97) && (\ord($this->source->s[$this->pos + 1]) === 108) && (\ord($this->source->s[$this->pos + 2]) === 115) && (\ord($this->source->s[$this->pos + 3]) === 101)) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
				$this->pos += 4;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
				$tmp = true;
			} else {
				$tmp = false;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:6: characters 18-160
			if (!$tmp) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:6: characters 76-114
				$this->die("Expected " . "alse");
			}
		} else if ($_g === 110) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
			$tmp = null;
			if (($this->max > ($this->pos + 2)) && (\ord($this->source->s[$this->pos]) === 117) && (\ord($this->source->s[$this->pos + 1]) === 108) && (\ord($this->source->s[$this->pos + 2]) === 108)) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
				$this->pos += 3;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
				$tmp = true;
			} else {
				$tmp = false;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:6: characters 18-160
			if (!$tmp) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:6: characters 76-114
				$this->die("Expected " . "ull");
			}
		} else if ($_g === 116) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
			$tmp = null;
			if (($this->max > ($this->pos + 2)) && (\ord($this->source->s[$this->pos]) === 114) && (\ord($this->source->s[$this->pos + 1]) === 117) && (\ord($this->source->s[$this->pos + 2]) === 101)) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
				$this->pos += 3;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
				$tmp = true;
			} else {
				$tmp = false;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:6: characters 18-160
			if (!$tmp) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:6: characters 76-114
				$this->die("Expected " . "rue");
			}
		} else if ($_g === 123) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:21: characters 9-29
			while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
				$this->pos++;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
			$tmp = null;
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
			if (($this->max > $this->pos) && (\ord($this->source->s[$this->pos]) === 125)) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
				$this->pos += 1;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:25: characters 11-31
				while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
					$this->pos++;
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
				$tmp = true;
			} else {
				$tmp = false;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:453: lines 453-454
			if ($tmp) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:454: characters 11-17
				return;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:465: lines 465-467
			while (true) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:466: characters 11-17
				if (\ord($_gthis->source->s[$_gthis->pos++]) !== 34) {
					$_gthis->die("expected string", $_gthis->pos - 1);
				}
				$_gthis->skipString();
				while (($_gthis->pos < $_gthis->max) && (\ord($_gthis->source->s[$_gthis->pos]) < 33)) {
					$_gthis->pos++;
				}
				$tmp = null;
				if (($_gthis->max > $_gthis->pos) && (\ord($_gthis->source->s[$_gthis->pos]) === 58)) {
					$_gthis->pos += 1;
					while (($_gthis->pos < $_gthis->max) && (\ord($_gthis->source->s[$_gthis->pos]) < 33)) {
						$_gthis->pos++;
					}
					$tmp = true;
				} else {
					$tmp = false;
				}
				if (!$tmp) {
					$_gthis->die("Expected " . ":");
				}
				$_gthis->skipValue();
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:21: characters 9-29
				while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
					$this->pos++;
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
				$tmp1 = null;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
				if (($this->max > $this->pos) && (\ord($this->source->s[$this->pos]) === 44)) {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
					$this->pos += 1;
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:25: characters 11-31
					while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
						$this->pos++;
					}
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
					$tmp1 = true;
				} else {
					$tmp1 = false;
				}
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:465: lines 465-467
				if (!$tmp1) {
					break;
				}
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:21: characters 9-29
			while (($this->pos < $this->max) && (\ord($this->source->s[$this->pos]) < 33)) {
				$this->pos++;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
			$tmp = null;
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:22: lines 22-28
			if (($this->max > $this->pos) && (\ord($this->source->s[$this->pos]) === 125)) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:23: characters 9-35
				$this->pos += 1;
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:19: lines 19-29
				$tmp = true;
			} else {
				$tmp = false;
			}
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:6: characters 18-160
			if (!$tmp) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.macro.hx:6: characters 76-114
				$this->die("Expected " . "}");
			}
		} else {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:481: characters 12-16
			$char = $_g;
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:482: lines 482-485
			if (($char === 46) || ($char === 45) || (($char < 58) && ($char > 47))) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:483: characters 11-27
				$this->skipNumber($char);
			} else {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:485: characters 11-28
				$this->invalidChar($char);
			}
		}
	}

	/**
	 * @param int $from
	 * @param int $to
	 * 
	 * @return SliceData
	 */
	public function slice ($from, $to) {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:365: characters 12-49
		return new SliceData($this->source, $from, $to);
	}

	/**
	 * @param int $code
	 * @param string $expected
	 * 
	 * @return void
	 */
	public function toChar ($code, $expected) {
		#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:374: lines 374-378
		while (true) {
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:374: characters 25-31
			$_g = \ord($this->source->s[$this->pos++]);
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:376: characters 12-18
			$_hx_tmp = null;
			#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:375: characters 12-21
			if (($_g === $code) === true) {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:375: characters 31-36
				break;
			} else {
				#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:376: characters 12-18
				$_hx_tmp = $_g < 33;
				if ($_hx_tmp !== true) {
					#/home/thehunter101/.haxe/tink_json/0,11,0/src/tink/json/Parser.hx:377: characters 16-41
					$this->die("expected " . ($expected??'null'));
				}
			}
		}
	}

	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


		self::$DBQT = 34;
	}
}

Boot::registerClass(BasicParser::class, 'tink.json.BasicParser');
BasicParser::__hx__init();
