<?php
/**
 * Generated by Haxe 4.3.6
 */

namespace tink\http\clients;

use \php\_Boot\HxAnon;
use \haxe\ds\Option;
use \php\Boot;
use \tink\core\TypedError;
use \tink\_Url\Url_Impl_;

class Helpers {
	/**
	 * @param object $url
	 * 
	 * @return Option
	 */
	public static function checkScheme ($url) {
		#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/Helpers.hx:9: characters 17-27
		$_g = $url->scheme;
		#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/Helpers.hx:9: lines 9-10
		if ($_g === null) {
			#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/Helpers.hx:10: characters 20-43
			$tmp = "Missing Scheme (expected http/https) in URL: " . (Url_Impl_::toString($url)??'null');
			#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/Helpers.hx:10: characters 15-44
			return Option::Some(new TypedError(400, $tmp, new HxAnon([
				"fileName" => "tink/http/clients/Helpers.hx",
				"lineNumber" => 16,
				"className" => "tink.http.clients.Helpers",
				"methodName" => "missingSchemeError",
			])));
		} else {
			#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/Helpers.hx:9: characters 17-27
			if ($_g === "http" || $_g === "https") {
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/Helpers.hx:11: characters 27-31
				return Option::None();
			} else {
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/Helpers.hx:12: characters 9-10
				$v = $_g;
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/Helpers.hx:12: characters 17-38
				$url = Url_Impl_::fromString($v);
				$tmp = "Invalid Scheme \"" . ($url->scheme??'null') . "\" (expected http/https) in URL: " . (Url_Impl_::toString($url)??'null');
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/Helpers.hx:12: characters 12-39
				return Option::Some(new TypedError(400, $tmp, new HxAnon([
					"fileName" => "tink/http/clients/Helpers.hx",
					"lineNumber" => 19,
					"className" => "tink.http.clients.Helpers",
					"methodName" => "invalidSchemeError",
				])));
			}
		}
	}

	/**
	 * @param object $url
	 * 
	 * @return TypedError
	 */
	public static function invalidSchemeError ($url) {
		#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/Helpers.hx:19: characters 33-110
		$tmp = "Invalid Scheme \"" . ($url->scheme??'null') . "\" (expected http/https) in URL: " . (Url_Impl_::toString($url)??'null');
		#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/Helpers.hx:19: characters 3-113
		return new TypedError(400, $tmp, new HxAnon([
			"fileName" => "tink/http/clients/Helpers.hx",
			"lineNumber" => 19,
			"className" => "tink.http.clients.Helpers",
			"methodName" => "invalidSchemeError",
		]));
	}

	/**
	 * @param object $url
	 * 
	 * @return TypedError
	 */
	public static function missingSchemeError ($url) {
		#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/Helpers.hx:16: characters 33-94
		$tmp = "Missing Scheme (expected http/https) in URL: " . (Url_Impl_::toString($url)??'null');
		#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/Helpers.hx:16: characters 3-97
		return new TypedError(400, $tmp, new HxAnon([
			"fileName" => "tink/http/clients/Helpers.hx",
			"lineNumber" => 16,
			"className" => "tink.http.clients.Helpers",
			"methodName" => "missingSchemeError",
		]));
	}
}

Boot::registerClass(Helpers::class, 'tink.http.clients.Helpers');
