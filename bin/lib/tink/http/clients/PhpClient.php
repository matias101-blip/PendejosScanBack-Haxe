<?php
/**
 * Generated by Haxe 4.3.6
 */

namespace tink\http\clients;

use \php\_Boot\HxAnon;
use \tink\http\HeaderField;
use \sys\io\FileInput;
use \php\Boot;
use \tink\http\IncomingResponse;
use \tink\streams\Single;
use \tink\chunk\ByteChunk;
use \tink\core\Outcome;
use \tink\http\ResponseHeaderBase;
use \tink\core\_Lazy\LazyConst;
use \php\_Boot\HxString;
use \tink\core\_Future\Future_Impl_;
use \tink\_Url\Url_Impl_;
use \tink\http\ClientObject;
use \tink\http\OutgoingRequest;
use \tink\core\_Future\FutureObject;
use \tink\io\IdealSourceTools;

class PhpClient implements ClientObject {
	/**
	 * @return void
	 */
	public function __construct () {
	}

	/**
	 * @param OutgoingRequest $req
	 * 
	 * @return FutureObject
	 */
	public function request ($req) {
		#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:16: lines 16-63
		return Future_Impl_::irreversible(function ($cb) use (&$req) {
			#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:17: lines 17-62
			IdealSourceTools::all($req->body)->handle(function ($chunk) use (&$req, &$cb) {
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:21: characters 21-56
				$_g = new \Array_hx();
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:21: characters 31-41
				$_g_current = 0;
				$_g_array = $req->header->fields;
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:21: characters 22-55
				while ($_g_current < $_g_array->length) {
					$h = ($_g_array->arr[$_g_current++] ?? null);
					#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:21: characters 43-55
					$x = $h->toString();
					$_g->arr[$_g->length++] = $x;
				}
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:21: characters 21-78
				$ob = ($_g->join("\x0D\x0A")??'null') . "\x0D\x0A";
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:22: characters 21-38
				$req1 = $req->header->method;
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:18: lines 18-25
				$options = ((array)(new HxAnon(["http" => ((array)(new HxAnon([
					"header" => $ob,
					"method" => $req1,
					"content" => $chunk->toBytes()->b->s,
				])))])));
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:27: characters 9-150
				$context = stream_context_create($options);
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:28: characters 9-41
				$url = Url_Impl_::toString($req->header->url);
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:30: lines 30-31
				$result = new FileInput(\fopen($url, "rb", false, $context));
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:33: characters 9-144
				$rawHeaders = \Array_hx::wrap($http_response_header);
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:37: characters 9-35
				$i = $rawHeaders->length;
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:38: characters 9-68
				while ($i-- >= 0) {
					#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:38: characters 25-68
					if (\StringTools::startsWith(($rawHeaders->arr[$i] ?? null), "HTTP/")) {
						#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:38: characters 63-68
						break;
					}
				}
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:39: characters 9-19
				$rawHeaders = $rawHeaders->slice($i);
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:42: characters 9-45
				$head = HxString::split(($rawHeaders->arr[0] ?? null), " ");
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:43: lines 43-51
				$_g = new \Array_hx();
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:43: characters 34-38
				$_g1 = 1;
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:43: characters 38-55
				$_g2 = $rawHeaders->length;
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:43: lines 43-51
				while ($_g1 < $_g2) {
					#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:43: characters 34-55
					$i = $_g1++;
					#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:44: characters 11-36
					$line = ($rawHeaders->arr[$i] ?? null);
					#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:45: characters 11-42
					$index = HxString::indexOf($line, ": ");
					#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:46: characters 11-44
					$name = \mb_substr($line, 0, $index);
					#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:48: characters 13-17
					$this1 = \mb_strtolower($name);
					#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:47: lines 47-50
					$x = new HeaderField($this1, \mb_substr($line, $index + 2, null));
					$_g->arr[$_g->length++] = $x;
				}
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:43: lines 43-51
				$headers = $_g;
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:53: characters 22-98
				$statusCode = \Std::parseInt(($head->arr[1] ?? null));
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:53: characters 9-99
				$header = new ResponseHeaderBase($statusCode, $head->slice(2)->join(" "), $headers, "HTTP/1.1");
				#/home/sinherani/haxelib/tink_http/0,10,0/src/tink/http/clients/PhpClient.hx:54: characters 9-68
				$cb(Outcome::Success(new IncomingResponse($header, new Single(new LazyConst(ByteChunk::of($result->readAll()))))));
			});
		});
	}
}

Boot::registerClass(PhpClient::class, 'tink.http.clients.PhpClient');
